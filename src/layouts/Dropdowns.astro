---
import Dropdown from "@/components/Dropdown.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";

import Layout from "./Layout.astro";

import type { MarkdownLayoutProps } from "astro";

type Props = MarkdownLayoutProps<{
  title: string;
  childs?: { title: string; href: string }[];
  displayImage?: string;
}>;

const {
  frontmatter: { title, childs, displayImage },
  rawContent,
} = Astro.props;
---

<Layout
  title={title}
  description={rawContent().trim() === "" ? undefined : rawContent().trim()}
  image={displayImage}
>
  <Header title={title} />
  <div class="content">
    <div class="slot">
      <slot />
    </div>
    <div class="dropdowns">
      {childs?.map((drop) => <Dropdown title={drop.title} href={drop.href} />)}
    </div>
  </div>
  <Footer />
</Layout>

<style>
  .content {
    animation: fadeInAnimation ease 0.7s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
  }

  @keyframes fadeInAnimation {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    align-items: center;

    min-height: calc(
      100vh - 50px - 150px
    ); /* 50px for header, 150px for footer */
  }
  .slot {
    max-width: 800px;
    padding: 20px 0;
  }

  .slot :global(img) {
    display: block;
    max-width: 300px;
    max-height: 300px;
    padding: 20px;
    margin: 0 auto;
  }

  .dropdowns {
    width: 100%;
  }
</style>
