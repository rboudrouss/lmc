---
import {
  LettresS,
  CelsaS,
  SciencesS,
  SuS,
  SanteS,
  PolyS,
} from "../assos/AffSelect"; // FIXME

import type { Affiliations, TypeActus } from "../../helpers";
interface Props {
  affSelected?: Affiliations;
  typeASelected?: string;
}

const typeActus: { name: string; link: TypeActus }[] = [
  { name: "Actualités", link: "actualites" },
  { name: "Évènements", link: "evenements" },
  { name: "En ce moment", link: "encemoment" },
];

const { affSelected, typeASelected } = Astro.props;

const baseLink = "/fildactus" + (typeASelected ? `/${typeASelected}/` : "/");
const linkTypeA = (name: TypeActus) =>
  name !== typeASelected
    ? `/fildactus/${name}/${affSelected ?? ""}`
    : `/fildactus/${affSelected ?? ""}`;

const showAll = !typeASelected && !affSelected;
---

<div class="typesAWrapper">
  {
    typeActus.map((type) => (
      <a
        href={linkTypeA(type.link)}
        class={`typeAWrapper ${!showAll && typeASelected !== type.link ? "transparent" : ""}`}
      >
        {type.name}
      </a>
    ))
  }
</div>

<div class="affsWrapper">
  <SuS
    link={baseLink + (affSelected !== "su" ? "su" : "")}
    transparent={!showAll && affSelected !== "su"}
  />
  <LettresS
    link={baseLink + (affSelected !== "lettres" ? "lettres" : "")}
    transparent={!showAll && affSelected !== "lettres"}
  />
  <SciencesS
    link={baseLink + (affSelected !== "sciences" ? "sciences" : "")}
    transparent={!showAll && affSelected !== "sciences"}
  />
  <CelsaS
    link={baseLink + (affSelected !== "celsa" ? "celsa" : "")}
    transparent={!showAll && affSelected !== "celsa"}
  />
  <PolyS
    link={baseLink + (affSelected !== "polytech" ? "polytech" : "")}
    transparent={!showAll && affSelected !== "polytech"}
  />
  <SanteS
    link={baseLink + (affSelected !== "sante" ? "sante" : "")}
    transparent={!showAll && affSelected !== "sante"}
  />
</div>

<style>
  .typesAWrapper,
  .affsWrapper,
  .typesWrapper {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem;
  }

  .typeAWrapper,
  .typeWrapper {
    padding: 0.5rem 1rem;
    border-radius: 1rem;
    background-color: black;
    color: white;
    text-decoration: none;
    transition: 0.2s;

    font-size: 1.2rem;
  }

  .typeAWrapper {
    font-size: 2rem;
    padding: 1.5rem 2rem;
  }

  .affsWrapper {
    padding-bottom: 2rem;
  }

  @media (max-width: 900px) {
    .typeWrapper {
      font-size: 1.5rem;
      padding: 1rem 1.5rem;
    }
  }

  .transparent {
    background: rgba(0, 0, 0, 0.5);
  }
</style>
