---
import { type ActuT, dateStringActus, type TypeActus } from "../../helpers";
import Bar from "../assos/Bar.astro";

interface Props {
  actu: ActuT;
}
const { actu } = Astro.props;

let dateString = dateStringActus(
  actu.date,
  actu.url.split("/")[2] as TypeActus
);
// HACK type of actus is hardcoded as url.split("/")[2]
---

<div class="wrapperActu">
  <div class="bars">
    {actu.affiliation?.slice(0, 2).map((aff) => <Bar affiliation={aff} />)}
  </div>
  <div class="content">
    {
      dateString && (
        <span
          class="dateActus"
          data-date={actu.date?.toDateString()}
          data-type={actu.url.split("/")[2]}
        >
          {dateString}
        </span>
      )
    }
    <div class="titleWrapper">
      <div class="icons">
        {
          actu.auteurInfo?.map((auteur, i) => (
            <a href={auteur.url}>
              <img
                loading="lazy"
                src={auteur.logo}
                alt={actu.auteur[i]}
                class="icon"
              />
            </a>
          ))
        }
      </div>
      <a href={actu.url} class="title">{actu.title}</a>
    </div>
    <img src={actu.image} alt={actu.title} class="mainImg" loading="lazy" />
    <div class="md">
      <div set:html={actu.content} />
    </div>
    {
      actu.source && (
        <a href={actu.source} target="_blank" class="source">
          SOURCE
        </a>
      )
    }
  </div>
  <div class="bars">
    {
      actu.affiliation
        ?.slice(0, 2)
        .reverse()
        .map((aff) => <Bar affiliation={aff} />)
    }
  </div>
</div>

<script>
  import { dateStringActus, type TypeActus } from "@/helpers";

  document.addEventListener("astro:page-load", () => {
    let dateActus = document.querySelectorAll<HTMLElement>(".dateActus");

    dateActus.forEach((dateActu) => {
      let date = Date.parse(dateActu.dataset.date);
      const today = new Date();
      today.setHours(0, 0, 0, 0);

      if (date < today.getTime() && dateActu.dataset.type !== "actualites") {
        dateActu.parentElement.parentElement.style.display = "none";
        console.log("yeet", date);
      }

      dateActu.innerText = dateStringActus(
        new Date(date),
        dateActu.dataset.type as TypeActus
      );
    });
  });
</script>

<style>
  .wrapperActu {
    display: flex;
    justify-content: center;
    padding: 0px;
    outline: 5px solid black;
    width: 100%;
  }

  .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 15px 5px;
    width: 100%;
  }

  .icons {
    display: flex;
    gap: 10px;
  }

  .titleWrapper {
    display: flex;
    align-items: center;
    gap: 10px;
    overflow: hidden;
  }

  .title {
    font-size: xx-large;
    font-weight: bold;
    color: blue;
  }

  .mainImg {
    max-height: 70vh;
    max-width: 100%;
    padding: 15px 5px;
  }

  .icon {
    max-height: 100px;
    max-width: 35vw;
  }

  .md {
    width: 70%;
    font-size: 1.15rem;
    overflow: hidden;
  }

  .dateActus {
    font-size: x-large;
    width: 70%;
    padding: 5px 0px;
    font-weight: bold;
  }

  .source {
    font-size: large;
    font-weight: bold;
  }

  .bars {
    width: 5%;
    display: flex;
  }

  .md :global(p),
  .md :global(ul) {
    padding-bottom: 10px;
  }

  .md :global(a),
  .source {
    color: blue;
    text-decoration: underline;
  }

  @media (max-width: 800px) {
    .mainImg {
      max-width: 100%;
    }

    .md {
      width: 90%;
      font-size: 0.8rem;
    }

    .dateActus {
      width: 90%;
      font-size: medium;
    }

    .title {
      font-size: medium;
    }

    .icon {
      max-height: 60px;
    }

    .source {
      font-size: medium;
    }
</style>
